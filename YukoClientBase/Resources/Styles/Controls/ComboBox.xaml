<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#c8c8c8" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#179bd7" />
    <SolidColorBrush x:Key="ComboBox.Focused.Border" Color="#686969" />

    <LinearGradientBrush x:Key="ComboBoxBorderBrush" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,2">
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform ScaleY="-1" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.5" Color="{DynamicResource BorderGradient.Color}" />
            <GradientStop Offset="1.0" Color="{DynamicResource Border.Color}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxBorderBrushHovered" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,2">
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform ScaleY="-1" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.5" Color="{DynamicResource BorderGradient.Color}" />
            <GradientStop Offset="1.0" Color="{DynamicResource Border.Color}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ComboBoxBorderBrushFocused" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,2">
        <LinearGradientBrush.RelativeTransform>
            <ScaleTransform ScaleY="-1" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="1.0" Color="{DynamicResource BorderAlt2Gradient.Color}" />
            <GradientStop Offset="1.0" Color="{DynamicResource BorderAlt2.Color}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ComboBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2,2,2,2"
                               Stroke="{DynamicResource BorderAlt3}"
                               StrokeThickness="1,1,1,1"
                               StrokeDashArray="1,2"
                               SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlyphEditableDropdownExpanderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource IconColor}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4,4,4,4">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                            <ContentPresenter.Content>
                                <Path Name="Arrow"
                                      Width="10"
                                      Height="10"
                                      Fill="{TemplateBinding Foreground}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <PathGeometry>M5.24264 7.77817L9.13173 3.88908L9.83884 4.59619L5.24264 9.19239L0.646448 4.59619L1.35356 3.88908L5.24264 7.77817Z</PathGeometry>
                                    </Path.Data>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ContentBackgroundHovered}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource BorderAlt3}" />
                            <Setter Property="Foreground" Value="{DynamicResource IconColorHovered}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource ContentBackgroundHovered}" />
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ContentBackgroundHovered}" />
                            <Setter Property="Foreground" Value="{DynamicResource IconColorHovered}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ContentBackgroundSelected}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource ContentBackgroundPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource IconColorSelected}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource IconColorDisabled}" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderlessTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="CaretBrush" Value="{DynamicResource ContentForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  Focusable="False"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
                            <Setter Property="CaretBrush" Value="{DynamicResource ContentForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundAlt4}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Padding" Value="8,6,8,6" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition
                                MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               StaysOpen="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               AllowsTransparency="True"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom"
                               SnapsToDevicePixels="True">
                            <Border x:Name="DropDownBorder"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    BorderBrush="{DynamicResource BorderAlt}"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource PopupBackground}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0,0,4,4"
                                    Padding="0,2,0,2">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="16"
                                                      ShadowDepth="7"
                                                      Direction="270"
                                                      Color="#CC000000"
                                                      Opacity="0.17"
                                                      RenderingBias="Performance" />
                                </Border.Effect>
                                <ScrollViewer x:Name="DropDownScrollViewer" ClipToBounds="True">
                                    <Grid>
                                        <Canvas HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                Height="0"
                                                Width="0">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        Margin="4,0,6,0"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <Border x:Name="Border"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4,4,4,4" />
                        <ToggleButton x:Name="PART_ToggleButton"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource GlyphEditableDropdownExpanderStyle}"
                                      HorizontalContentAlignment="Right"
                                      Padding="{TemplateBinding Padding}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="0"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Grid.Column="0"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 Margin="0,0,0,0"
                                 Padding="{TemplateBinding Padding}"
                                 Background="Transparent"
                                 Foreground="{TemplateBinding Foreground}"
                                 FontSize="{TemplateBinding FontSize}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 Style="{StaticResource BorderlessTextBoxStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger SourceName="DropDownBorder" RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Effect).Opacity"
                                                                   Storyboard.TargetName="DropDownBorder">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.4" Value="0" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:0.5" Value="0.17" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter Property="Margin" TargetName="DropDownBorder" Value="14,0,14,14" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" TargetName="PART_EditableTextBox"
                                    Value="{DynamicResource ContentForeground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource ContentBackgroundAlt5}" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource ComboBoxBorderBrushHovered}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="PART_ToggleButton" Value="True" />
                                <Condition Property="IsFocused" SourceName="PART_EditableTextBox" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource ContentBackground}" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource ComboBoxBorderBrushHovered}" />
                            <Setter Property="BorderThickness" Value="1,1,1,1" />
                        </Trigger>
                        <Trigger SourceName="PART_ToggleButton" Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource ComboBoxBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" TargetName="PART_EditableTextBox"
                                    Value="{DynamicResource ContentForeground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource ContentForeground}" />
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource ContentBackground}" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{StaticResource ComboBoxBorderBrush}" />
                            <Setter Property="BorderThickness" Value="1,1,1,1" />
                            <Setter Property="CornerRadius" TargetName="Border" Value="4,4,0,0" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer"
                                 Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="PART_EditableTextBox"
                                    Value="{DynamicResource DisabledForeground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource DisabledForeground}" />
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource ContentBackgroundAlt6}" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{DynamicResource BorderAlt}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxItemFocusVisual}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="7,2,7,2" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource PopupBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderAlt}" />
        <Setter Property="Foreground" Value="{DynamicResource PopupForeground}" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="SelectionIndicator"
                                HorizontalAlignment="Left"
                                CornerRadius="1.5"
                                Height="12"
                                Width="2"
                                Visibility="Collapsed"
                                Background="{DynamicResource PrimaryBackground}" />
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="4,4,4,4"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionIndicator"
                                                             Storyboard.TargetProperty="Height"
                                                             From="12"
                                                             To="7"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Border.MouseUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectionIndicator"
                                                             Storyboard.TargetProperty="Height"
                                                             From="7"
                                                             To="12"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource PopupHoveredBackground}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource PopupHoveredBackground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource PopupHoveredForeground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource PopupSelectedBackground}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource PopupSelectedBackground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource PopupSelectedForeground}" />
                            <Setter Property="Visibility" TargetName="SelectionIndicator" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource PopupHoveredBackground}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource PopupHoveredBackground}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource PopupHoveredForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background"
                                    Value="{DynamicResource PopupBackground}" />
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource BorderAlt}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource ComboBoxStyle}" />

    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource ComboBoxItemStyle}" />

</ResourceDictionary>