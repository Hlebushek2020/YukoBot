<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Thickness x:Key="ScrollBar.Vertical.Static.StrokeThickness">0.5,0,0.5,0</Thickness>
    <Thickness x:Key="ScrollBar.Horizontal.Static.StrokeThickness">0,0.5,0,0.5</Thickness>

    <Style x:Key="ScrollBarFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2,2,2,2"
                               Stroke="{DynamicResource BorderAlt3}"
                               StrokeThickness="1,1,1,1"
                               StrokeDashArray="1,2"
                               SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ScrollBarFocusVisual}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource IconColorHovered}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource IconColorSelected}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource IconColorDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="thumbBorder"
                            CornerRadius="4,4,4,4"
                            BorderThickness="0,0,0,0"
                            Background="{DynamicResource BorderAlt1}"
                            BorderBrush="{DynamicResource BorderAlt1}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="thumbBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="thumbBorder"
                            CornerRadius="4,4,4,4"
                            BorderThickness="0,0,0,0"
                            Background="{DynamicResource BorderAlt1}"
                            BorderBrush="{DynamicResource BorderAlt1}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder"
                                    Value="{DynamicResource BorderAlt1}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="thumbBorder" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="thumbBorder" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Width="{TemplateBinding Width}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition MaxHeight="10" />
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0"
                                      x:Name="PART_LineUpButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      BorderThickness="0,0,0,0"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop"
                                  Fill="{DynamicResource IconColor}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Stretch="Uniform">
                                <Path.Data>
                                    <PathGeometry>
                                        M3.22427 0.4375C3.56904 -0.145833 4.43096 -0.145834 4.77573 0.4375L7.87866 5.6875C8.22343 6.27083 7.79247 7 7.10293 7L0.897074 7C0.207535 7 -0.223427 6.27083 0.121342 5.6875L3.22427 0.4375Z
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </RepeatButton>
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="True"
                               Margin="0,2,0,2">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton"
                                      Grid.Row="2"
                                      BorderThickness="0,0,0,0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Fill="{DynamicResource IconColor}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Stretch="Uniform">
                                <Path.Data>
                                    <PathGeometry>
                                        M4.77573 6.5625C4.43096 7.14583 3.56904 7.14583 3.22427 6.5625L0.121342 1.3125C-0.223427 0.729167 0.207535 -4.76837e-07 0.897074 -4.76837e-07L7.10293 -4.76837e-07C7.79246 -4.76837e-07 8.22343 0.729166 7.87866 1.3125L4.77573 6.5625Z
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource IconColorSelected}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource IconColorSelected}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource IconColorHovered}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
                                           Value="True" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource IconColorHovered}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource IconColorDisabled}" />
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource IconColorDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Height="{TemplateBinding Height}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="10" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition MaxWidth="10" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Grid.Column="0"
                                              x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              BorderThickness="0,0,0,0"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Fill="{DynamicResource IconColor}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="1,1,1,1"
                                          Stretch="Uniform">
                                        <Path.Data>
                                            <PathGeometry>M19.299999,0L19.299999,32 0,16z</PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </RepeatButton>
                                <Track Grid.Column="1"
                                       x:Name="PART_Track"
                                       Margin="2,0,2,0">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton"
                                              Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              BorderThickness="0,0,0,0"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Fill="{DynamicResource IconColor}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="1,1,1,1"
                                          Stretch="Uniform">
                                        <Path.Data>
                                            <PathGeometry>M0,0L22.644,16 0,32z</PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource IconColorSelected}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource IconColorSelected}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource IconColorHovered}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource IconColorHovered}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource IconColorDisabled}" />
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource IconColorDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderAlt1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Column="0"
                                                Grid.Row="0"
                                                Margin="{TemplateBinding Padding}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Cursor="Arrow"
                                   Minimum="0"
                                   Width="10"
                                   Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   AutomationProperties.AutomationId="VerticalScrollBar" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="0"
                                   Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Cursor="Arrow"
                                   Orientation="Horizontal"
                                   Minimum="0"
                                   Height="10"
                                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}"
           BasedOn="{StaticResource ScrollBarStyle}" />

    <Style x:Key="{x:Type ScrollViewer}"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{StaticResource ScrollViewerStyle}" />


</ResourceDictionary>